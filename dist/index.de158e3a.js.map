{"mappings":"AAAA,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,AAAC;AAC3C,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC;AAC7C,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;AAExC,IAAI,GAAG,GAAG,CAAC,srCA6DX,CAAC,AAAC;AAEF,IAAI,IAAI,GAAG,EAAE,AAAC;AACd,IAAI,CAAC,GAAG,EAAE,AAAC;AAEX,IAAI,IAAI,GAAG,IAAM;IACb,CAAC,EAAE,CAAC;IACJ,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAI,OAAM;IAChC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,EACd,IAAI,IAAI,MAAM;SACX,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,EACpB,IAAI,IAAI,QAAQ;SAGhB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC;IAElB,UAAU,CAAC,IAAM;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACtC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QACxB,IAAI,EAAE,CAAC;KACV,EAAE,GAAG,CAAC,CAAC;CACX;AACD,IAAI,EAAE,CAAC","sources":["src/main.js"],"sourcesContent":["let html = document.querySelector('#html');\r\nlet style = document.querySelector('#style');\r\nlet div = document.querySelector('#div')\r\n\r\nlet str = `/* 我是一名前端新人^_^\r\n * 新人入坑，还请多多关照！\r\n * 接下来为大家展示我画的一个八卦图\r\n **/\r\n\r\n/*\r\n * 首先，我需要一个 div\r\n **/\r\n#div{\r\n    width: 200px;\r\n    height: 200px;\r\n    border: 1px solid black;\r\n}\r\n\r\n/* \r\n * 将 div 渲染成圆形\r\n */\r\n#div{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\r\n    border: none;\r\n}\r\n\r\n/* \r\n * 接着，将 div 渲染成一半白一半黑的阴阳模式\r\n */\r\n#div{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n\r\n/* \r\n * 使用伪元素将 div 渲染成阴阳两方，天地两部；\r\n */\r\n#div::before {\r\n    width: 50%;\r\n    height: 50%;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n#div::after {\r\n    width: 50%;\r\n    height: 50%;\r\n    border-radius: 50%;\r\n    background-color: #000;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n/* \r\n * 最后，进一步渲染八卦图，完成一幅太极阴阳图（阴阳鱼互纠太极图）。\r\n */\r\n#div::before {\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n#div::after {\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n`;\r\n\r\nlet str2 = \"\";\r\nlet n = -1;\r\n\r\nlet step = () => {\r\n    n++;\r\n    if (n > str.length - 1) { return }\r\n    if (str[n] == '\\n') {\r\n        str2 += \"<br>\"\r\n    } else if (str[n] == \" \") {\r\n        str2 += \"&nbsp;\"\r\n    }\r\n    else {\r\n        str2 += str[n]\r\n    }\r\n    setTimeout(() => {\r\n        html.innerHTML = str2;\r\n        style.innerHTML = str.substring(0, n);\r\n        window.scrollTo(0, 99999);\r\n        html.scrollTo(0, 99999);\r\n        step();\r\n    }, 100);\r\n}\r\nstep();\r\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}